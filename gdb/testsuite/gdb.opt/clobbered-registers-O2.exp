# Copyright 2007-2025 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# This file is part of the gdb testsuite.

# Test displaying call clobbered registers in optimized binaries.
# GDB should not show incorrect values.

standard_testfile .c -2.c -3.c

if {[prepare_for_testing "failed to prepare" $testfile \
	 [list $srcfile $srcfile2 $srcfile3] \
	 {debug optimize=-O2 nowarnings}]} {
    return -1
}

if {![runto start_sequence]} {
   return
}

proc do_test { var val } {
    set re_dd [string cat [string_to_regexp {$}] $::decimal]

    set res 0
    gdb_test_multiple "print /x $var" "" {
	-re -wrap "$re_dd = <optimized out>" {
	}
	-re -wrap "$re_dd = $::hex" {
	    set res 1
	}
	-re -wrap  "" {
	}
    }

    if { !$res } {
	return $res
    }

    set res 0
    gdb_test_multiple "print *$var" "" {
	-re -wrap "$re_dd = $val" {
	    set res 1
	}
	-re -wrap  "" {
	}
    }

    return $res
}

gdb_test "finish" "0xdeadbeef"

set res0 [do_test operand0 13]
set res1 [do_test operand1 14]

if {![runto start_sequence]} {
   return
}

gdb_test "frame 1" "#1.*in gen_movsd.*" \
    "backtracing"

set test "print operand0"
if { $res0 } {
    gdb_assert { [do_test operand0 13] } $test
} else {
    unsupported $test
}

set test "print operand1"
if { $res1 } {
    gdb_assert { [do_test operand1 14] } $test
} else {
    unsupported $test
}
