# Copyright 2012-2024 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# This file is part of the gdb testsuite.  It is intended to test that
# gdb can correctly print arrays with indexes for each element of the
# array.

standard_testfile .c

set opts {}
lappend opts debug
lappend opts additional_flags=-fshort-enums
# Without -nostdlib, on arm we run into:
#
#   ld: warning: enum_cond.o uses variable-size enums yet the output is to use
#     32-bit enums; use of enum values across objects may fail
#
# due to conflicting values for Tag_ABI_enum_size between enum_cond.o and
# linked-in objects.  Work around this by using -nostdlib, making sure there's
# just one object, and no such conflict can happen.
lappend opts additional_flags=-nostdlib

if { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable $opts] != "" } {
    untested "failed to compile"
    return -1
}

clean_restart $testfile

if {![runto_main]} {
    return
}

gdb_test "break call_me if param.e == 1" \
         "Breakpoint $decimal at $hex: file .*$srcfile, line $decimal\\."

# Continue.  We should hit our breakpoint...
gdb_test "continue" \
         "Breakpoint $decimal, call_me \\(param=\\.\\.\\.\\) at .*" \
         "continue to conditional breakpoint in call_me"

